{
  "name": "ghostscript-js",
  "version": "0.3.1",
  "description": "Just a nodeJS wrapper for ghostscript",
  "main": "src/ghostscript.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/Inist-CNRS/ghostscript-js.git"
  },
  "author": {
    "name": "RÃ©my MEJA",
    "email": "remy.meja@inist.fr"
  },
  "license": "MIT",
  "engines": {
    "node": ">=4.2.0"
  },
  "scripts": {
    "test": "mocha"
  },
  "devDependencies": {
    "chai": "^3.4.0",
    "mocha": "^3.2.0"
  },
  "readme": "[![Build Status](https://travis-ci.org/Inist-CNRS/ghostscript-js.svg?branch=master)](https://travis-ci.org/Inist-CNRS/ghostscript-js)\n[![bitHound Overall Score](https://www.bithound.io/github/Inist-CNRS/ghostscript-js/badges/score.svg)](https://www.bithound.io/github/Inist-CNRS/ghostscript-js)\n\n# ghostscript-js\n\nJust a nodeJS wrapper for ghostscript\n\n## Usage\n```javascript\n\nconst Ghostscript = require('ghostscript-js')\n\nconst gs = new Ghostscript\n\ngs.batch()\n  .nopause()\n  .device()\n  .resolution(150)\n  .input('/path/to/file.pdf')\n  .output('/path/to/file.tif')\n  .exec().catch((error) => {\n    // Do something\n  }).then((sdtout) => {\n    // Do something\n  })\n```\n\n## API\n\n* batch\n* nopause\n* quiet\n* interpolate\n* ram - number - defaults to 30 MB\n* device - device - defaults to tiff24nc\n* resolution - number\n* firstPage - number\n* lastPage - number\n* output - file\n* input - file\n* exec - Promise (ES6)\n* compatibility - number\n* pdfsettings - string\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/Inist-CNRS/ghostscript-js/issues"
  },
  "_id": "ghostscript-js@0.3.1",
  "dist": {
    "shasum": "0f2ab9a09f8891bb748b395eaf9e3aabbab358a7"
  },
  "_from": "ghostscript-js@0.3.1",
  "_resolved": "https://registry.npmjs.org/ghostscript-js/-/ghostscript-js-0.3.1.tgz"
}
